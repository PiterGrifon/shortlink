
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
   Name = "Gui",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = ":3",
   LoadingSubtitle = "by Talon",
   ShowText = "Rayfield", -- for mobile users to unhide rayfield, change if you'd like
   Theme = "Amber Glow", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   ToggleUIKeybind = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "key?",
      Subtitle = "system",
      Note = "ask dev", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = false, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"dontgoontoforsakenat3am"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local Tab = Window:CreateTab("Movement", 4483362458) -- Title, Image|

local Button = Tab:CreateButton({
   Name = "Inf Stamina",
   Callback = function()
   while true do
    wait(0)
local sprint = game:GetService("ReplicatedStorage").Systems.Character.Game.Sprinting
local edit = require(sprint)
edit.StaminaLossDisabled = true
end
   -- The function that takes place when the button is pressed
   end,
})

local Tab = Window:CreateTab("Mains", 4483362458) -- Title, Image

local Button = Tab:CreateButton({
   Name = "Teleports near player(12 studs);Press X or on button(for mobiles)",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/PiterGrifon/shortlink/refs/heads/main/lua"))()
   -- The function that takes place when the button is pressed
   end,
})

local Button = Tab:CreateButton({
   Name = "remove 1x4 popups",
   Callback = function()
local VIM = game:GetService("VirtualInputManager")
local player = game:GetService("Players").LocalPlayer
local PlayerGui = player:WaitForChild("PlayerGui")

local function handlePopups()
    local temporaryUI = PlayerGui:FindFirstChild("TemporaryUI")
    if not temporaryUI then return end
    
    local popups = temporaryUI:GetChildren()
    
    for _, popup in ipairs(popups) do
        if popup.Name == "1x1x1x1Popup" then
            local centerX = popup.AbsolutePosition.X + (popup.AbsoluteSize.X / 2)
            local centerY = popup.AbsolutePosition.Y + (popup.AbsoluteSize.Y / 2) + 50
            
            -- Click down
            VIM:SendMouseButtonEvent(
                centerX,
                centerY,
                Enum.UserInputType.MouseButton1.Value,
                true,
                PlayerGui,
                1
            )
            
            -- Click up
            VIM:SendMouseButtonEvent(
                centerX,
                centerY,
                Enum.UserInputType.MouseButton1.Value,
                false,
                PlayerGui,
                1
            )
            
            -- Optional: break if you only want to handle one popup
            -- break
        end
    end
end

-- Set up a listener for new popups
local function setupPopupListener()
    local temporaryUI = PlayerGui:WaitForChild("TemporaryUI")
    
    temporaryUI.ChildAdded:Connect(function(child)
        if child.Name == "1x1x1x1Popup" then
            -- Small delay to ensure the popup is fully loaded
            task.wait(0.1)
            handlePopups()
        end
    end)
end

-- Initial check
handlePopups()

-- Start listening for new popups
setupPopupListener()
   -- The function that takes place when the button is pressed
   end,
})

local Tab = Window:CreateTab("esp", 4483362458) -- Title, Image

local Button = Tab:CreateButton({
   Name = "Players ESP(Killers red,survivors green!)",
   Callback = function()
   -- Roblox ESP Script for highlighting Survivors and Killers
-- Survivors: green highlight
-- Killers: red highlight

local Workspace = game:GetService("Workspace")

local function createHighlight(parent, color)
    local highlight = Instance.new("Highlight")
    highlight.Adornee = parent
    highlight.FillColor = color
    highlight.OutlineColor = Color3.new(0, 0, 0)
    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    highlight.Parent = parent
    return highlight
end

local function highlightCharacters()
    -- Clear existing highlights first
    for _, highlight in pairs(Workspace:GetDescendants()) do
        if highlight:IsA("Highlight") then
            highlight:Destroy()
        end
    end

    -- Highlight Killers in red
    local killersFolder = Workspace:FindFirstChild("Players") and Workspace.Players:FindFirstChild("Killers")
    if killersFolder then
        for _, model in pairs(killersFolder:GetChildren()) do
            if model:IsA("Model") then
                createHighlight(model, Color3.new(1, 0, 0)) -- red
            end
        end
    end

    -- Highlight Survivors in green
    local survivorsFolder = Workspace:FindFirstChild("Players") and Workspace.Players:FindFirstChild("Survivors")
    if survivorsFolder then
        for _, model in pairs(survivorsFolder:GetChildren()) do
            if model:IsA("Model") then
                createHighlight(model, Color3.new(0, 1, 0)) -- green
            end
        end
    end
end

-- Initial highlight
highlightCharacters()

-- Optional: Update highlights if new characters are added dynamically
Workspace.Players.Killers.ChildAdded:Connect(function()
    highlightCharacters()
end)
Workspace.Players.Survivors.ChildAdded:Connect(function()
    highlightCharacters()
end)
Workspace.Players.Killers.ChildRemoved:Connect(function()
    highlightCharacters()
end)
Workspace.Players.Survivors.ChildRemoved:Connect(function()
    highlightCharacters()
end)

   -- The function that takes place when the button is pressed
   end,
})

local Button = Tab:CreateButton({
   Name = "Esp gen",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/PiterGrifon/shortlink/refs/heads/main/lua2"))()
   -- The function that takes place when the button is pressed
   end,
})
local Button = Tab:CreateButton({
   Name = "Things esp(bloxycolanmedkits are blue)",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/PiterGrifon/shortlink/refs/heads/main/lua3"))()
   -- The function that takes place when the button is pressed
   end,
})
